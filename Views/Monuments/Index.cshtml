@model List<OtvorenoRacunalstvoLabosi.DTO.MonumentDto>
@{
    ViewData["Title"] = "Monuments";
}

<div id="app">
    <h1 class="mt-4">Monuments Table</h1>

    <div class="mb-3 row d-flex justify-content-between">
        <div class="d-flex justify-content-around col-5">
            <div class="col-md-6">
                <input v-model="searchTerm" type="text" id="searchTerm" class="form-control" placeholder="Search monuments..." />
            </div>
            <div class="col-md-4">
                <select id="searchField" v-model="searchField" class="form-select">
                    <option value="all">All</option>
                    <option value="name">Name</option>
                    <option value="location">Location</option>
                    <option value="artist">Artist</option>
                    <option value="material">Material</option>
                    <option value="height">Height</option>
                    <option value="artistsnationality">Artists nationality</option>
                </select>
            </div>
        </div>
        
        <div class="d-flex col-5 justify-content-end">
            <button class="btn btn-secondary me-2" v-on:click="downloadData('json')">Download JSON</button>
            <button class="btn btn-secondary me-2" v-on:click="downloadData('csv')">Download CSV</button>
            <a class="btn btn-secondary me-2" asp-action="Create">Add new monument</a>
        </div>
    </div>


    <table class="table table-striped table-hover">
        <thead class="table-dark">
            <tr>
                <th>Name</th>
                <th>Location</th>
                <th>Year installed</th>
                <th>Material</th>
                <th>Height</th>
                <th>Historical significance</th>
                <th>Artist</th>
                <th>Artist birth-death years</th>
                <th>Artists nationality</th>
            </tr>
        </thead>
        <tbody>
            <tr v-for="monument in filteredMonuments" 
                :key="monument.Id"
                v-on:click="goToDetails(monument.Id)"
                style="cursor: pointer;">
                <td>{{ monument.Name }}</td>
                <td>{{ monument.Location }}</td>
                <td>{{ monument.YearInstalled}}</td>
                <td>{{monument.Material}}</td>
                <td>{{monument.Height}}</td>
                <td>{{monument.HistoricalSignificance}}</td>
                <td>{{ monument.Artist?.Name || 'Unknown Artist' }}</td>
                <td>{{monument.Artist?.BirthYear}} - {{monument.Artist?.DeathYear}}</td>
                <td>{{monument.Artist?.Nationality}}</td>
            </tr>
        </tbody>
    </table>
</div>

<script>
     new Vue({
        el: '#app',
        data() {
            return {
                monuments: @Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(Model)),
                searchTerm: '',
                searchField: 'all'
            };
        },
        methods: {
            async downloadData(format) {
                const url = `/filtered`;

                try {
                    const response = await axios.get(url, {
                        params: {
                            searchField: this.searchField,
                            searchTerm: this.searchTerm,
                            format: format
                        },
                        responseType: 'blob'
                    });

                    const blob = new Blob([response.data], { type: response.headers['content-type'] });
                    const downloadUrl = URL.createObjectURL(blob);

                    const link = document.createElement('a');
                    link.href = downloadUrl;
                    link.download = `monuments.${format}`;
                    link.click();

                    URL.revokeObjectURL(downloadUrl);
                } catch (error) {
                    console.error("Error downloading data:", error);
                }
            },
            goToDetails(id) {
                window.location.href = `/Monuments/Details/${id}`;
            }
        
        },
        computed: {
            filteredMonuments() { 

                return this.monuments.filter(monument => {
                    const name = (monument.Name || '').toLowerCase();
                    const location = (monument.Location || '').toLowerCase();
                    const artist = (monument.Artist.Name || '').toLowerCase();
                    const an = (monument.Artist.ArtistsNationality || '').toLowerCase();
                    const material = (monument.Material || '').toLowerCase();
                    const height = (monument.Height || 0);

                    if (this.searchField === 'all') {
                        return name.includes(this.searchTerm.toLowerCase()) ||
                            location.includes(this.searchTerm.toLowerCase()) ||
                            artist.includes(this.searchTerm.toLowerCase()) ||
                            an.includes(this.searchTerm.toLowerCase()) ||
                            material.includes(this.searchTerm.toLowerCase()) ||
                            height.toString().includes(this.searchTerm);
                    } else if (this.searchField === 'name') {
                        return name.includes(this.searchTerm.toLowerCase());
                    } else if (this.searchField === 'location') {
                        return location.includes(this.searchTerm.toLowerCase());
                    } else if (this.searchField === 'artist') {
                        return artist.includes(this.searchTerm.toLowerCase());
                    } else if (this.searchField === 'artistsNationality') {
                        return an.includes(this.searchTerm.toLowerCase());
                    } else if (this.searchField === 'material') {
                        return material.includes(this.searchTerm.toLowerCase());
                    } else if (this.searchField === 'height') {
                        return height.toString().includes(this.searchTerm);
                    }
                    return false;
                });
            }
        }
    });
</script>
    